{"version":3,"sources":["components/Timer.jsx","components/Timer2.jsx","App.js","reportWebVitals.js","index.js"],"names":["Timer","time","onTick","React","useState","seconds","setSeconds","timerActive","setTimerActive","useEffect","setTimeout","onClick","TimerTwo","Tick","App","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA4BiBA,MA1BjB,YAA+B,IAAfC,EAAc,EAAdA,KAAKC,EAAS,EAATA,OACjB,EAAgCC,IAAMC,SAASH,GAA/C,mBAAQI,EAAR,KAAiBC,EAAjB,KACA,EAAwCH,IAAMC,UAAS,GAAvD,mBAAQG,EAAR,KAAqBC,EAArB,KAYA,OAVAL,IAAMM,WAAU,WACVJ,EAAU,GAAKE,EACjBG,WAAWJ,EAAY,IAAMD,EAAU,GAEvCG,GAAe,KAEhB,CAAEH,EAASE,IAEdL,EAAOG,GAGL,gCACQ,wBAAQM,QAAS,kBAAMH,GAAgBD,IAAvC,SACGA,EAAc,OAAS,UAE1B,8BAAMF,IACT,wBAAQM,QAAS,kBAAML,EAAWL,IAAlC,uBCMMW,MA1BjB,YAAgC,IAAbX,EAAY,EAAZA,KAAKY,EAAO,EAAPA,KACpB,EAAgCV,IAAMC,SAASH,GAA/C,mBAAQI,EAAR,KAAiBC,EAAjB,KACA,EAAwCH,IAAMC,UAAS,GAAvD,mBAAQG,EAAR,KAAqBC,EAArB,KAYA,OAVAL,IAAMM,WAAU,WACVJ,EAAU,GAAKE,EACjBG,WAAWJ,EAAY,IAAMD,EAAU,GAEvCG,GAAe,KAEhB,CAAEH,EAASE,IAEdM,EAAKR,GAGH,gCACQ,wBAAQM,QAAS,kBAAMH,GAAgBD,IAAvC,SACGA,EAAc,OAAS,UAE1B,8BAAMF,IACT,wBAAQM,QAAS,kBAAML,EAAWL,IAAlC,uBCDIa,MAhBf,WACE,OACE,gCACA,6CACA,cAAC,EAAD,CACAb,KAAQ,GACRC,OAAQ,SAACD,GAAD,OAAUc,QAAQC,IAAI,0FAAsBf,MACpD,8CACA,8BACE,cAAC,EAAD,CACAA,KAAQ,GACRY,KAAM,SAACZ,GAAD,OAAUc,QAAQC,IAAI,0FAAsBf,YCJzCgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2e80efdb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Timer({time,onTick}) {\r\n    const [ seconds, setSeconds ] = React.useState(time);\r\n    const [ timerActive, setTimerActive ] = React.useState(false);\r\n  \r\n    React.useEffect(() => {\r\n      if (seconds > 0 && timerActive) {\r\n        setTimeout(setSeconds, 1000, seconds - 1);\r\n      } else {\r\n        setTimerActive(false);\r\n      }\r\n    }, [ seconds, timerActive ]);\r\n\r\n    onTick(seconds);\r\n  \r\n    return (\r\n      <div>\r\n              <button onClick={() => setTimerActive(!timerActive)}>\r\n                {timerActive ? 'stop' : 'start'}\r\n              </button>\r\n              <div>{seconds}</div>\r\n           <button onClick={() => setSeconds(time)}>Reset</button>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Timer;","import React from 'react';\r\n\r\nfunction TimerTwo({time,Tick}) {\r\n    const [ seconds, setSeconds ] = React.useState(time);\r\n    const [ timerActive, setTimerActive ] = React.useState(false);\r\n  \r\n    React.useEffect(() => {\r\n      if (seconds > 0 && timerActive) {\r\n        setTimeout(setSeconds, 1000, seconds - 2);\r\n      } else {\r\n        setTimerActive(false);\r\n      }\r\n    }, [ seconds, timerActive ]);\r\n\r\n    Tick(seconds);\r\n  \r\n    return (\r\n      <div>\r\n              <button onClick={() => setTimerActive(!timerActive)}>\r\n                {timerActive ? 'stop' : 'start'}\r\n              </button>\r\n              <div>{seconds}</div>\r\n           <button onClick={() => setSeconds(time)}>Reset</button>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default TimerTwo;","import React from 'react';\nimport './App.css';\nimport Timer from './components/Timer';\nimport TimerTwo from './components/Timer2';\n\nfunction App() {\n  return (\n    <div>\n    <h2>First Timer</h2>\n    <Timer \n    time = {10}\n    onTick={(time) => console.log(\"Залишилось часу: \" + time)}/>\n    <h2>Second Timer</h2>\n    <div>\n      <TimerTwo \n      time = {20}\n      Tick={(time) => console.log(\"Залишилось часу: \" + time)}/>\n    </div>\n    </div>\n  )\n }\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}